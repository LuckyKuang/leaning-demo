server:
  port: 9024

spring:
  application:
    name: multi-rocketmq

rocketmq:
  # 支持配置多个连接
  producers:
    - groupName: ${spring.application.name}
      # 生产者唯一标识
      producerId: producerTest
      # mq的nameserver地址
      nameServer: 192.168.1.100:9876
      # 消息最大长度 默认 1024 * 4 (4M)
      maxMessageSize: 4096
      # 发送消息超时时间，默认 3000
      sendMessageTimeOut: 3000
      # 同步发送消息失败重试次数，默认2
      retryTimesWhenSendFailed: 2
      # 异步发送消息失败重试次数，默认2
      retryTimesWhenSendAsyncFailed: 2
  # 支持配置多个连接
  consumers:
    - groupName: Concurrently_Group
      # mq的nameserver地址
      nameServer: 192.168.1.100:9876
      # 消费者订阅的主题topic和tags,tagName=*则代表监听topic所有,tagName=tag1||tag2||tags3则代表监听部分
      # 实际业务处理类必须实现MqConsumerService接口
      # 每个topic对应一个处理类,根据topicName获取对应类,例如:mqConsumerService.Topic1,mqConsumerService固定值
      topics:
        - topicName: topic1
          tagName: test
        - topicName: topic2
          tagName: '*'
      # 消费者线程数据量
      consumeThreadMin: 4
      consumeThreadMax: 4
      # 设置一次消费的条数，默认1
      consumeMessageBatchMaxSize: 1
      # 是否顺序消费
      orderly: false
      # 消费模型 BROADCASTING-广播 CLUSTERING-集群
      messageModel: CLUSTERING
    - groupName: Orderly_Group
      # mq的nameserver地址
      nameServer: 192.168.1.100:9876
      # 消费者订阅的主题topic和tags,tagName=*则代表监听topic所有,tagName=tag1||tag2||tags3则代表监听部分
      # 实际业务处理类必须实现MqConsumerService接口
      # 每个topic对应一个处理类,根据topicName获取对应类,例如:mqConsumerService.Topic1,mqConsumerService固定值
      topics:
        - topicName: topic3
          tagName: '*'
      # 消费者线程数据量
      consumeThreadMin: 4
      consumeThreadMax: 4
      # 设置一次消费的条数，默认1
      consumeMessageBatchMaxSize: 1
      # 是否顺序消费
      orderly: true
      # 消费模型 BROADCASTING-广播 CLUSTERING-集群
      messageModel: CLUSTERING